// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace MTGViewer.Maui.Data.MtgJson
{
    public partial class SetListQueryBuilder : GraphQlQueryBuilder<SetListQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new GraphQlFieldMetadata { Name = "id" },
            new GraphQlFieldMetadata { Name = "baseSetSize" },
            new GraphQlFieldMetadata { Name = "code" },
            new GraphQlFieldMetadata { Name = "isFoilOnly" },
            new GraphQlFieldMetadata { Name = "isOnlineOnly" },
            new GraphQlFieldMetadata { Name = "isPaperOnly" },
            new GraphQlFieldMetadata { Name = "name" },
            new GraphQlFieldMetadata { Name = "releaseDate" },
            new GraphQlFieldMetadata { Name = "totalSetSize" },
            new GraphQlFieldMetadata { Name = "type" }
        };

        protected override string TypeName { get; } = "SetList";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get; } = AllFieldMetadata;

        public SetListQueryBuilder WithId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("id", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptId() => ExceptField("id");

        public SetListQueryBuilder WithBaseSetSize(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("baseSetSize", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptBaseSetSize() => ExceptField("baseSetSize");

        public SetListQueryBuilder WithCode(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("code", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptCode() => ExceptField("code");

        public SetListQueryBuilder WithIsFoilOnly(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("isFoilOnly", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptIsFoilOnly() => ExceptField("isFoilOnly");

        public SetListQueryBuilder WithIsOnlineOnly(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("isOnlineOnly", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptIsOnlineOnly() => ExceptField("isOnlineOnly");

        public SetListQueryBuilder WithIsPaperOnly(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("isPaperOnly", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptIsPaperOnly() => ExceptField("isPaperOnly");

        public SetListQueryBuilder WithName(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("name", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptName() => ExceptField("name");

        public SetListQueryBuilder WithReleaseDate(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("releaseDate", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptReleaseDate() => ExceptField("releaseDate");

        public SetListQueryBuilder WithTotalSetSize(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("totalSetSize", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptTotalSetSize() => ExceptField("totalSetSize");

        public SetListQueryBuilder WithType(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("type", alias, new GraphQlDirective?[] { include, skip });

        public SetListQueryBuilder ExceptType() => ExceptField("type");
    }
}
