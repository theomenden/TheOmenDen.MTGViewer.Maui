// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace MTGViewer.Maui.Data.MtgJson
{
    public partial class CardEntityFilterInput : IGraphQlInputObject
    {
        private InputPropertyInfo _operator;
        private InputPropertyInfo _uuidEq;
        private InputPropertyInfo _uuidIn;
        private InputPropertyInfo _artistEq;
        private InputPropertyInfo _artistIn;
        private InputPropertyInfo _artistLike;
        private InputPropertyInfo _asciiNameEq;
        private InputPropertyInfo _asciiNameIn;
        private InputPropertyInfo _asciiNameLike;
        private InputPropertyInfo _nameEq;
        private InputPropertyInfo _nameIn;
        private InputPropertyInfo _nameLike;
        private InputPropertyInfo _setCodeEq;
        private InputPropertyInfo _setCodeIn;
        private InputPropertyInfo _typeEq;
        private InputPropertyInfo _typeIn;
        private InputPropertyInfo _typeLike;
        private InputPropertyInfo _typeNe;
        private InputPropertyInfo _conditions;
        private InputPropertyInfo _identifiers;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<BaseOperator?>))]
        #endif
        public QueryBuilderParameter<BaseOperator?>? Operator
        {
            get => (QueryBuilderParameter<BaseOperator?>?)_operator.Value;
            set => _operator = new InputPropertyInfo { Name = "operator", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("uuid_eq")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? UuidEq
        {
            get => (QueryBuilderParameter<string?>?)_uuidEq.Value;
            set => _uuidEq = new InputPropertyInfo { Name = "uuid_eq", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("uuid_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>?>))]
        #endif
        public QueryBuilderParameter<ICollection<string>?>? UuidIn
        {
            get => (QueryBuilderParameter<ICollection<string>?>?)_uuidIn.Value;
            set => _uuidIn = new InputPropertyInfo { Name = "uuid_in", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("artist_eq")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? ArtistEq
        {
            get => (QueryBuilderParameter<string?>?)_artistEq.Value;
            set => _artistEq = new InputPropertyInfo { Name = "artist_eq", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("artist_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>?>))]
        #endif
        public QueryBuilderParameter<ICollection<string>?>? ArtistIn
        {
            get => (QueryBuilderParameter<ICollection<string>?>?)_artistIn.Value;
            set => _artistIn = new InputPropertyInfo { Name = "artist_in", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("artist_like")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? ArtistLike
        {
            get => (QueryBuilderParameter<string?>?)_artistLike.Value;
            set => _artistLike = new InputPropertyInfo { Name = "artist_like", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("asciiName_eq")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? AsciiNameEq
        {
            get => (QueryBuilderParameter<string?>?)_asciiNameEq.Value;
            set => _asciiNameEq = new InputPropertyInfo { Name = "asciiName_eq", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("asciiName_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>?>))]
        #endif
        public QueryBuilderParameter<ICollection<string>?>? AsciiNameIn
        {
            get => (QueryBuilderParameter<ICollection<string>?>?)_asciiNameIn.Value;
            set => _asciiNameIn = new InputPropertyInfo { Name = "asciiName_in", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("asciiName_like")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? AsciiNameLike
        {
            get => (QueryBuilderParameter<string?>?)_asciiNameLike.Value;
            set => _asciiNameLike = new InputPropertyInfo { Name = "asciiName_like", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("name_eq")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? NameEq
        {
            get => (QueryBuilderParameter<string?>?)_nameEq.Value;
            set => _nameEq = new InputPropertyInfo { Name = "name_eq", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("name_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>?>))]
        #endif
        public QueryBuilderParameter<ICollection<string>?>? NameIn
        {
            get => (QueryBuilderParameter<ICollection<string>?>?)_nameIn.Value;
            set => _nameIn = new InputPropertyInfo { Name = "name_in", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("name_like")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? NameLike
        {
            get => (QueryBuilderParameter<string?>?)_nameLike.Value;
            set => _nameLike = new InputPropertyInfo { Name = "name_like", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("setCode_eq")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? SetCodeEq
        {
            get => (QueryBuilderParameter<string?>?)_setCodeEq.Value;
            set => _setCodeEq = new InputPropertyInfo { Name = "setCode_eq", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("setCode_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>?>))]
        #endif
        public QueryBuilderParameter<ICollection<string>?>? SetCodeIn
        {
            get => (QueryBuilderParameter<ICollection<string>?>?)_setCodeIn.Value;
            set => _setCodeIn = new InputPropertyInfo { Name = "setCode_in", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("type_eq")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? TypeEq
        {
            get => (QueryBuilderParameter<string?>?)_typeEq.Value;
            set => _typeEq = new InputPropertyInfo { Name = "type_eq", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("type_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>?>))]
        #endif
        public QueryBuilderParameter<ICollection<string>?>? TypeIn
        {
            get => (QueryBuilderParameter<ICollection<string>?>?)_typeIn.Value;
            set => _typeIn = new InputPropertyInfo { Name = "type_in", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("type_like")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? TypeLike
        {
            get => (QueryBuilderParameter<string?>?)_typeLike.Value;
            set => _typeLike = new InputPropertyInfo { Name = "type_like", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("type_ne")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string?>))]
        #endif
        public QueryBuilderParameter<string?>? TypeNe
        {
            get => (QueryBuilderParameter<string?>?)_typeNe.Value;
            set => _typeNe = new InputPropertyInfo { Name = "type_ne", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<CardCondition>?>))]
        #endif
        public QueryBuilderParameter<ICollection<CardCondition>?>? Conditions
        {
            get => (QueryBuilderParameter<ICollection<CardCondition>?>?)_conditions.Value;
            set => _conditions = new InputPropertyInfo { Name = "conditions", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<FilterOnIdentifier?>))]
        #endif
        public QueryBuilderParameter<FilterOnIdentifier?>? Identifiers
        {
            get => (QueryBuilderParameter<FilterOnIdentifier?>?)_identifiers.Value;
            set => _identifiers = new InputPropertyInfo { Name = "identifiers", Value = value };
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_operator.Name != null) yield return _operator;
            if (_uuidEq.Name != null) yield return _uuidEq;
            if (_uuidIn.Name != null) yield return _uuidIn;
            if (_artistEq.Name != null) yield return _artistEq;
            if (_artistIn.Name != null) yield return _artistIn;
            if (_artistLike.Name != null) yield return _artistLike;
            if (_asciiNameEq.Name != null) yield return _asciiNameEq;
            if (_asciiNameIn.Name != null) yield return _asciiNameIn;
            if (_asciiNameLike.Name != null) yield return _asciiNameLike;
            if (_nameEq.Name != null) yield return _nameEq;
            if (_nameIn.Name != null) yield return _nameIn;
            if (_nameLike.Name != null) yield return _nameLike;
            if (_setCodeEq.Name != null) yield return _setCodeEq;
            if (_setCodeIn.Name != null) yield return _setCodeIn;
            if (_typeEq.Name != null) yield return _typeEq;
            if (_typeIn.Name != null) yield return _typeIn;
            if (_typeLike.Name != null) yield return _typeLike;
            if (_typeNe.Name != null) yield return _typeNe;
            if (_conditions.Name != null) yield return _conditions;
            if (_identifiers.Name != null) yield return _identifiers;
        }
    }
}
