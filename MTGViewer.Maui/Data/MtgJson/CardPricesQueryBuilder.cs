// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace MTGViewer.Maui.Data.MtgJson
{
    public partial class CardPricesQueryBuilder : GraphQlQueryBuilder<CardPricesQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new GraphQlFieldMetadata { Name = "id" },
            new GraphQlFieldMetadata { Name = "uuid" },
            new GraphQlFieldMetadata { Name = "format" },
            new GraphQlFieldMetadata { Name = "provider" },
            new GraphQlFieldMetadata { Name = "currency" },
            new GraphQlFieldMetadata { Name = "date" },
            new GraphQlFieldMetadata { Name = "cardType" },
            new GraphQlFieldMetadata { Name = "listType" },
            new GraphQlFieldMetadata { Name = "price" }
        };

        protected override string TypeName { get; } = "CardPrices";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get; } = AllFieldMetadata;

        public CardPricesQueryBuilder WithId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("id", alias, new GraphQlDirective?[] { include, skip });

        public CardPricesQueryBuilder ExceptId() => ExceptField("id");

        public CardPricesQueryBuilder WithUuid(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("uuid", alias, new GraphQlDirective?[] { include, skip });

        public CardPricesQueryBuilder ExceptUuid() => ExceptField("uuid");

        public CardPricesQueryBuilder WithFormat(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("format", alias, new GraphQlDirective?[] { include, skip });

        public CardPricesQueryBuilder ExceptFormat() => ExceptField("format");

        public CardPricesQueryBuilder WithProvider(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("provider", alias, new GraphQlDirective?[] { include, skip });

        public CardPricesQueryBuilder ExceptProvider() => ExceptField("provider");

        public CardPricesQueryBuilder WithCurrency(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("currency", alias, new GraphQlDirective?[] { include, skip });

        public CardPricesQueryBuilder ExceptCurrency() => ExceptField("currency");

        public CardPricesQueryBuilder WithDate(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("date", alias, new GraphQlDirective?[] { include, skip });

        public CardPricesQueryBuilder ExceptDate() => ExceptField("date");

        public CardPricesQueryBuilder WithCardType(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("cardType", alias, new GraphQlDirective?[] { include, skip });

        public CardPricesQueryBuilder ExceptCardType() => ExceptField("cardType");

        public CardPricesQueryBuilder WithListType(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("listType", alias, new GraphQlDirective?[] { include, skip });

        public CardPricesQueryBuilder ExceptListType() => ExceptField("listType");

        public CardPricesQueryBuilder WithPrice(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("price", alias, new GraphQlDirective?[] { include, skip });

        public CardPricesQueryBuilder ExceptPrice() => ExceptField("price");
    }
}
