// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace MTGViewer.Maui.Data.MtgJson
{
    public partial class IdentifierQueryBuilder : GraphQlQueryBuilder<IdentifierQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new GraphQlFieldMetadata { Name = "cardKingdomFoilId" },
            new GraphQlFieldMetadata { Name = "cardKingdomId" },
            new GraphQlFieldMetadata { Name = "mcmId" },
            new GraphQlFieldMetadata { Name = "mcmMetaId" },
            new GraphQlFieldMetadata { Name = "mtgArenaId" },
            new GraphQlFieldMetadata { Name = "mtgoFoilId" },
            new GraphQlFieldMetadata { Name = "mtgoId" },
            new GraphQlFieldMetadata { Name = "mtgjsonV4Id" },
            new GraphQlFieldMetadata { Name = "multiverseId" },
            new GraphQlFieldMetadata { Name = "scryfallId" },
            new GraphQlFieldMetadata { Name = "scryfallOracleId" },
            new GraphQlFieldMetadata { Name = "scryfallIllustrationId" },
            new GraphQlFieldMetadata { Name = "tcgplayerProductId" }
        };

        protected override string TypeName { get; } = "Identifier";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get; } = AllFieldMetadata;

        public IdentifierQueryBuilder WithCardKingdomFoilId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("cardKingdomFoilId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptCardKingdomFoilId() => ExceptField("cardKingdomFoilId");

        public IdentifierQueryBuilder WithCardKingdomId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("cardKingdomId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptCardKingdomId() => ExceptField("cardKingdomId");

        public IdentifierQueryBuilder WithMcmId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("mcmId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptMcmId() => ExceptField("mcmId");

        public IdentifierQueryBuilder WithMcmMetaId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("mcmMetaId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptMcmMetaId() => ExceptField("mcmMetaId");

        public IdentifierQueryBuilder WithMtgArenaId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("mtgArenaId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptMtgArenaId() => ExceptField("mtgArenaId");

        public IdentifierQueryBuilder WithMtgoFoilId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("mtgoFoilId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptMtgoFoilId() => ExceptField("mtgoFoilId");

        public IdentifierQueryBuilder WithMtgoId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("mtgoId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptMtgoId() => ExceptField("mtgoId");

        public IdentifierQueryBuilder WithMtgjsonV4Id(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("mtgjsonV4Id", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptMtgjsonV4Id() => ExceptField("mtgjsonV4Id");

        public IdentifierQueryBuilder WithMultiverseId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("multiverseId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptMultiverseId() => ExceptField("multiverseId");

        public IdentifierQueryBuilder WithScryfallId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("scryfallId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptScryfallId() => ExceptField("scryfallId");

        public IdentifierQueryBuilder WithScryfallOracleId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("scryfallOracleId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptScryfallOracleId() => ExceptField("scryfallOracleId");

        public IdentifierQueryBuilder WithScryfallIllustrationId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("scryfallIllustrationId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptScryfallIllustrationId() => ExceptField("scryfallIllustrationId");

        public IdentifierQueryBuilder WithTcgplayerProductId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("tcgplayerProductId", alias, new GraphQlDirective?[] { include, skip });

        public IdentifierQueryBuilder ExceptTcgplayerProductId() => ExceptField("tcgplayerProductId");
    }
}
