// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace MTGViewer.Maui.Data.MtgJson
{
    public partial class TranslationsQueryBuilder : GraphQlQueryBuilder<TranslationsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new GraphQlFieldMetadata { Name = "AncientGreek" },
            new GraphQlFieldMetadata { Name = "Arabic" },
            new GraphQlFieldMetadata { Name = "ChineseSimplified" },
            new GraphQlFieldMetadata { Name = "ChineseTraditional" },
            new GraphQlFieldMetadata { Name = "French" },
            new GraphQlFieldMetadata { Name = "German" },
            new GraphQlFieldMetadata { Name = "Hebrew" },
            new GraphQlFieldMetadata { Name = "Italian" },
            new GraphQlFieldMetadata { Name = "Japanese" },
            new GraphQlFieldMetadata { Name = "Korean" },
            new GraphQlFieldMetadata { Name = "Latin" },
            new GraphQlFieldMetadata { Name = "Phyrexian" },
            new GraphQlFieldMetadata { Name = "PortugueseBrazil" },
            new GraphQlFieldMetadata { Name = "Russian" },
            new GraphQlFieldMetadata { Name = "Sanskrit" },
            new GraphQlFieldMetadata { Name = "Spanish" }
        };

        protected override string TypeName { get; } = "Translations";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get; } = AllFieldMetadata;

        public TranslationsQueryBuilder WithAncientGreek(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("AncientGreek", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptAncientGreek() => ExceptField("AncientGreek");

        public TranslationsQueryBuilder WithArabic(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Arabic", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptArabic() => ExceptField("Arabic");

        public TranslationsQueryBuilder WithChineseSimplified(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("ChineseSimplified", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptChineseSimplified() => ExceptField("ChineseSimplified");

        public TranslationsQueryBuilder WithChineseTraditional(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("ChineseTraditional", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptChineseTraditional() => ExceptField("ChineseTraditional");

        public TranslationsQueryBuilder WithFrench(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("French", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptFrench() => ExceptField("French");

        public TranslationsQueryBuilder WithGerman(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("German", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptGerman() => ExceptField("German");

        public TranslationsQueryBuilder WithHebrew(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Hebrew", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptHebrew() => ExceptField("Hebrew");

        public TranslationsQueryBuilder WithItalian(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Italian", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptItalian() => ExceptField("Italian");

        public TranslationsQueryBuilder WithJapanese(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Japanese", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptJapanese() => ExceptField("Japanese");

        public TranslationsQueryBuilder WithKorean(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Korean", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptKorean() => ExceptField("Korean");

        public TranslationsQueryBuilder WithLatin(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Latin", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptLatin() => ExceptField("Latin");

        public TranslationsQueryBuilder WithPhyrexian(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Phyrexian", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptPhyrexian() => ExceptField("Phyrexian");

        public TranslationsQueryBuilder WithPortugueseBrazil(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("PortugueseBrazil", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptPortugueseBrazil() => ExceptField("PortugueseBrazil");

        public TranslationsQueryBuilder WithRussian(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Russian", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptRussian() => ExceptField("Russian");

        public TranslationsQueryBuilder WithSanskrit(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Sanskrit", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptSanskrit() => ExceptField("Sanskrit");

        public TranslationsQueryBuilder WithSpanish(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("Spanish", alias, new GraphQlDirective?[] { include, skip });

        public TranslationsQueryBuilder ExceptSpanish() => ExceptField("Spanish");
    }
}
