// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace MTGViewer.Maui.Data.MtgJson
{
    public partial class ForeignDataQueryBuilder : GraphQlQueryBuilder<ForeignDataQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new GraphQlFieldMetadata { Name = "faceName" },
            new GraphQlFieldMetadata { Name = "flavorText" },
            new GraphQlFieldMetadata { Name = "language" },
            new GraphQlFieldMetadata { Name = "multiverseId" },
            new GraphQlFieldMetadata { Name = "name" },
            new GraphQlFieldMetadata { Name = "text" },
            new GraphQlFieldMetadata { Name = "type" }
        };

        protected override string TypeName { get; } = "ForeignData";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get; } = AllFieldMetadata;

        public ForeignDataQueryBuilder WithFaceName(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("faceName", alias, new GraphQlDirective?[] { include, skip });

        public ForeignDataQueryBuilder ExceptFaceName() => ExceptField("faceName");

        public ForeignDataQueryBuilder WithFlavorText(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("flavorText", alias, new GraphQlDirective?[] { include, skip });

        public ForeignDataQueryBuilder ExceptFlavorText() => ExceptField("flavorText");

        public ForeignDataQueryBuilder WithLanguage(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("language", alias, new GraphQlDirective?[] { include, skip });

        public ForeignDataQueryBuilder ExceptLanguage() => ExceptField("language");

        public ForeignDataQueryBuilder WithMultiverseId(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("multiverseId", alias, new GraphQlDirective?[] { include, skip });

        public ForeignDataQueryBuilder ExceptMultiverseId() => ExceptField("multiverseId");

        public ForeignDataQueryBuilder WithName(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("name", alias, new GraphQlDirective?[] { include, skip });

        public ForeignDataQueryBuilder ExceptName() => ExceptField("name");

        public ForeignDataQueryBuilder WithText(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("text", alias, new GraphQlDirective?[] { include, skip });

        public ForeignDataQueryBuilder ExceptText() => ExceptField("text");

        public ForeignDataQueryBuilder WithType(string? alias = null, IncludeDirective? include = null, SkipDirective? skip = null) => WithScalarField("type", alias, new GraphQlDirective?[] { include, skip });

        public ForeignDataQueryBuilder ExceptType() => ExceptField("type");
    }
}
